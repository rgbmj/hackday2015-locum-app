/**
 * This class has been generated by Fast Code Eclipse Plugin 
 * For more information please go to http://fast-code.sourceforge.net/
 * @author : rgill
 * Created : 10/22/2015 12:54:23
 */

package com.bmj.hackday.locumapp.service;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.Set;
import java.util.TreeSet;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import com.bmj.hackday.locumapp.SpringJunitTestFixture;
import com.bmj.hackday.locumapp.model.Grade;
import com.bmj.hackday.locumapp.model.UserDetail;
import com.bmj.hackday.locumapp.model.UserName;
import com.bmj.hackday.locumapp.role.UserRole;

public class CandidatesServiceTest extends SpringJunitTestFixture {

	@Autowired
	private CandidatesService candidatesService;

	/**
	 *
	 * @see com.bmj.hackday.locumapp.service.CandidatesService#getAllCandidates(UserName)
	 */
	@Test
	public void testGetCandidates_NullOrEmptyName_GivesEmptyList() {
		List<UserDetail> candidates = candidatesService.getAllCandidates(null);
		assertTrue("candidates should be not null and length equal to 0", candidates != null && candidates.size() == 0);
	}

	@Test
	public void testGetCandidates_NullRoleToSearch_GivesEmptyList() throws Exception {
		UserRole roleToSearch = null;
		List<UserDetail> candidates = candidatesService.getAllCandidates(roleToSearch);
		assertTrue("candidates should be not null and length equal to 0", candidates != null && candidates.size() == 0);
	}

	@Test
	public void testGetCandidates_HospitalRoleToSearch_GivesListOfHospitals() throws Exception {
		UserRole userrole = UserRole.HOSPITAL;
		List<UserDetail> candidates = candidatesService.getAllCandidates(userrole);
		assertEquals("Candidates list size does not match", 5, candidates.size());
	}

	@Test
	public void testGetAllGrades() throws Exception {
		assertNotNull(candidatesService);
		Set<Grade> result = candidatesService.getAllGrades();

		assertNotNull(result);
		assertEquals(3, result.size());

		Set<Grade> expected = new TreeSet<>();
		expected.add(new Grade("consultant"));
		expected.add(new Grade("foundation_2"));
		expected.add(new Grade("registrar"));

		assertEquals(expected, result);
	}

	@Test
	public void testGetAllSpecialties() throws Exception {
		assertNotNull(candidatesService);
		Set<String> result = candidatesService.getAllSpecialties();

		assertNotNull(result);
		assertTrue(result.size() > 0);

		Set<String> expected = new TreeSet<>();
		expected.add("geriatrics");
		expected.add("neurology");
		expected.add("oncology");
		expected.add("paediatrics");
		expected.add("rheumatology");

		assertEquals(expected, result);
	}

}
